<?php

declare(strict_types=1);

/*
 * ReloadlySdkLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ReloadlySdkLib\Models;

use stdClass;

class ReloadlyAirtimeAsyncTopupRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $operatorId;

    /**
     * @var string
     */
    private $amount;

    /**
     * @var bool
     */
    private $useLocalAmount;

    /**
     * @var string
     */
    private $customIdentifier;

    /**
     * @var RecipientPhone
     */
    private $recipientPhone;

    /**
     * @var SenderPhone
     */
    private $senderPhone;

    /**
     * @param string $operatorId
     * @param string $amount
     * @param bool $useLocalAmount
     * @param string $customIdentifier
     * @param RecipientPhone $recipientPhone
     * @param SenderPhone $senderPhone
     */
    public function __construct(
        string $operatorId,
        string $amount,
        bool $useLocalAmount,
        string $customIdentifier,
        RecipientPhone $recipientPhone,
        SenderPhone $senderPhone
    ) {
        $this->operatorId = $operatorId;
        $this->amount = $amount;
        $this->useLocalAmount = $useLocalAmount;
        $this->customIdentifier = $customIdentifier;
        $this->recipientPhone = $recipientPhone;
        $this->senderPhone = $senderPhone;
    }

    /**
     * Returns Operator Id.
     */
    public function getOperatorId(): string
    {
        return $this->operatorId;
    }

    /**
     * Sets Operator Id.
     *
     * @required
     * @maps operatorId
     */
    public function setOperatorId(string $operatorId): void
    {
        $this->operatorId = $operatorId;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): string
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @required
     * @maps amount
     */
    public function setAmount(string $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Use Local Amount.
     */
    public function getUseLocalAmount(): bool
    {
        return $this->useLocalAmount;
    }

    /**
     * Sets Use Local Amount.
     *
     * @required
     * @maps useLocalAmount
     */
    public function setUseLocalAmount(bool $useLocalAmount): void
    {
        $this->useLocalAmount = $useLocalAmount;
    }

    /**
     * Returns Custom Identifier.
     */
    public function getCustomIdentifier(): string
    {
        return $this->customIdentifier;
    }

    /**
     * Sets Custom Identifier.
     *
     * @required
     * @maps customIdentifier
     */
    public function setCustomIdentifier(string $customIdentifier): void
    {
        $this->customIdentifier = $customIdentifier;
    }

    /**
     * Returns Recipient Phone.
     */
    public function getRecipientPhone(): RecipientPhone
    {
        return $this->recipientPhone;
    }

    /**
     * Sets Recipient Phone.
     *
     * @required
     * @maps recipientPhone
     */
    public function setRecipientPhone(RecipientPhone $recipientPhone): void
    {
        $this->recipientPhone = $recipientPhone;
    }

    /**
     * Returns Sender Phone.
     */
    public function getSenderPhone(): SenderPhone
    {
        return $this->senderPhone;
    }

    /**
     * Sets Sender Phone.
     *
     * @required
     * @maps senderPhone
     */
    public function setSenderPhone(SenderPhone $senderPhone): void
    {
        $this->senderPhone = $senderPhone;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['operatorId']       = $this->operatorId;
        $json['amount']           = $this->amount;
        $json['useLocalAmount']   = $this->useLocalAmount;
        $json['customIdentifier'] = $this->customIdentifier;
        $json['recipientPhone']   = $this->recipientPhone;
        $json['senderPhone']      = $this->senderPhone;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
